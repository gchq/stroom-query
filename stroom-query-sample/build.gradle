/*
 * Copyright 2017 Crown Copyright
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.benjaminsproule.swagger'

dependencies {
    //--------Project----------
    implementation project(':stroom-query-api')

    //--------3rd party--------
    implementation libs.jackson_databind
    implementation libs.jackson_annotations
    implementation libs.jackson_core
    implementation libs.swagger_annotations
    implementation libs.ws_rs_api
}

//Generate swagger specs for the ExamplEndpoint
//This is to allow easier checking of the generated spec files when making changes to
//the model's swagger annotations
swagger {
    apiSource {
        springmvc = false //makes it search for jersey annotations
        outputFormats =[ 'json', 'yaml']
        locations = [ 'stroom.query.api.v2.sample.ExampleEndpoint' ]
        schemes = [ 'http', 'https' ]
        host = 'localhost:8080'
        basePath = '/v2'
        info {
            title = 'stroom-query'
            version = 'v2'
            description = 'An API for querying data sources including the ability to requset multiple result definitions'
            contact {
                name = 'GCHQ'
                url = 'https://github.com/gchq/stroom-query'
            }
            license {
                url = 'http://www.apache.org/licenses/LICENSE-2.0.html'
                name = 'Apache 2.0'
            }
        }
        //outputPath = "${project.buildDir}/generated/document.html"
        swaggerDirectory = "${project.buildDir}"
    }
}

tasks.generateSwaggerDocumentation {
    dependsOn classes
}

tasks.build{
    dependsOn generateSwaggerDocumentation
}
